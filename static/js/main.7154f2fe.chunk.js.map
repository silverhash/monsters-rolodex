{"version":3,"sources":["components/card/card.component.jsx","logo.svg","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","CardList","console","log","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","setState","catch","error","this","filteredMonsters","filter","m","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAMaA,GCNE,I,kBDMK,SAACC,GAAD,OACZ,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAClB,6BAA4BL,EAAMI,QAAQE,MAAjCN,EAAMI,QAAQC,SEJtBE,EAAW,SAAAP,GAEpB,OADAQ,QAAQC,IAAIT,GAER,qBAAKC,UAAU,YAAf,SACKD,EAAMU,SAASC,KAAI,SAAAP,GAAO,OACvB,cAAC,EAAD,CAAMA,QAASA,UCNlBQ,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBAAQC,KAAK,SAASd,UAAU,SAASY,YAAcA,EAAcG,SAAWF,MCkCrEG,E,kDA/Bb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXR,SAAU,GACVS,YAAa,IAJH,E,gEAQO,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GAAI,OAAI,EAAKC,SAAS,CAACd,SAAUa,OACtCE,OAAM,SAAAC,GAAK,OAAIlB,QAAQC,IAAI,+C,+BAItB,IAAD,SAC4BkB,KAAKT,MAA/BR,EADF,EACEA,SAAUS,EADZ,EACYA,YACbS,EAAmBlB,EAASmB,QAAO,SAAAC,GAAC,OAAIA,EAAExB,KAAKyB,cAAcC,SAASb,EAAYY,kBACxF,OACE,sBAAK9B,UAAU,MAAf,UACE,oBAAIA,UAAU,WAAd,8BACA,cAAC,EAAD,CAAWY,YAAY,kBAAkBC,aAAe,SAAAmB,GAAC,OACvD,EAAKT,SAAS,CAAEL,YAAac,EAAEC,OAAOC,WAExC,cAAC,EAAD,CAAUzB,SAAWkB,W,GA1BXQ,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7154f2fe.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.style.css'\r\n\r\n\r\n\r\nexport const Card = (props) => (\r\n        <div className='card-container'>\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n            <h1 key={props.monster.id}>{props.monster.name}</h1>\r\n        </div>\r\n);","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport  './card-list.style.css';\r\n\r\nimport { Card } from '../card/card.component'\r\n\r\nexport const CardList = props => {\r\n    console.log(props);\r\n    return (\r\n        <div className=\"card-list\">\r\n            {props.monsters.map(monster => (\r\n                <Card monster={monster} />\r\n            ))}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './search-box.style.css'\r\n\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input  type=\"search\" className='search' placeholder={ placeholder } onChange={ handleChange }/>\r\n);","import logo from './logo.svg';\nimport './App.css';\nimport { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\n\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(json => this.setState({monsters: json}))\n      .catch(error => console.log('There was an error fetching the users '));\n\n  }\n\n  render() {\n    const  { monsters, searchField } = this.state; //destructuring\n    const filteredMonsters = monsters.filter(m => m.name.toLowerCase().includes(searchField.toLowerCase()));\n    return (\n      <div className=\"App\">\n        <h1 className=\"h1-title\">Monsters Rolodex</h1>\n        <SearchBox placeholder=\"Search Monsters\" handleChange= {e => (\n          this.setState({ searchField: e.target.value}))}\n        />\n        <CardList monsters={ filteredMonsters }></CardList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}